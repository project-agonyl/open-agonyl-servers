name: Docker Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        service:
          - name: main-server
            dockerfile: build/Dockerfile.main-server
            context: .
          - name: login-server
            dockerfile: build/Dockerfile.login-server
            context: .
          - name: account-server
            dockerfile: build/Dockerfile.account-server
            context: .
          - name: gate-server
            dockerfile: build/Dockerfile.gate-server
            context: .
          - name: migrate
            dockerfile: build/Dockerfile.migrate
            context: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  create-release:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Docker Images
            
            The following Docker images have been built and pushed to the GitHub Container Registry:
            
            ```bash
            # Pull images for this release
            docker pull ghcr.io/${{ github.repository }}/main-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/login-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/account-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/gate-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/migrate:${{ github.ref_name }}
            ```
            
            ## Usage
            
            To use these images, you can reference them in your docker-compose.yml or run them directly:
            
            ```yaml
            version: '3.8'
            services:
              main-server:
                image: ghcr.io/${{ github.repository }}/main-server:${{ github.ref_name }}
                ports:
                  - "5555:5555"
              
              login-server:
                image: ghcr.io/${{ github.repository }}/login-server:${{ github.ref_name }}
                ports:
                  - "6666:6666"
              
              account-server:
                image: ghcr.io/${{ github.repository }}/account-server:${{ github.ref_name }}
                ports:
                  - "7777:7777"
              
              gate-server:
                image: ghcr.io/${{ github.repository }}/gate-server:${{ github.ref_name }}
                ports:
                  - "8888:8888"
            ```
          draft: false
          prerelease: false 