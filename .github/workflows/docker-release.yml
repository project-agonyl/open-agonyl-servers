name: Docker Release

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        service:
          - name: main-server
            dockerfile: build/Dockerfile.main-server
            context: .
          - name: login-server
            dockerfile: build/Dockerfile.login-server
            context: .
          - name: account-server
            dockerfile: build/Dockerfile.account-server
            context: .
          - name: gate-server
            dockerfile: build/Dockerfile.gate-server
            context: .
          - name: migrate
            dockerfile: build/Dockerfile.migrate
            context: .

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.service.name }}
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  comment-on-release:
    needs: build-and-push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Release ID
        id: get_release
        run: |
          RELEASE_ID=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}" | \
            jq -r '.id')
          echo "release_id=$RELEASE_ID" >> $GITHUB_OUTPUT

      - name: Comment on Release
        uses: actions/github-script@v7
        with:
          script: |
            const releaseId = '${{ steps.get_release.outputs.release_id }}';
            
            if (releaseId === 'null' || releaseId === '') {
              console.log('No release found for this tag');
              return;
            }

            const comment = `## 🐳 Docker Images Built Successfully!

            The following Docker images have been built and pushed to the GitHub Container Registry:

            ### Pull Commands
            \`\`\`bash
            # Pull images for this release
            docker pull ghcr.io/${{ github.repository }}/main-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/login-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/account-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/gate-server:${{ github.ref_name }}
            docker pull ghcr.io/${{ github.repository }}/migrate:${{ github.ref_name }}
            \`\`\`

            ### Docker Compose Example
            \`\`\`yaml
            version: '3.8'
            services:
              main-server:
                image: ghcr.io/${{ github.repository }}/main-server:${{ github.ref_name }}
                ports:
                  - "5555:5555"
              
              login-server:
                image: ghcr.io/${{ github.repository }}/login-server:${{ github.ref_name }}
                ports:
                  - "3550:3550"
              
              account-server:
                image: ghcr.io/${{ github.repository }}/account-server:${{ github.ref_name }}
                ports:
                  - "5589:5589"
              
              gate-server:
                image: ghcr.io/${{ github.repository }}/gate-server:${{ github.ref_name }}
                ports:
                  - "9860:9860"

              migrate:
                image: ghcr.io/${{ github.repository }}/migrate:${{ github.ref_name }}
                # Run once to migrate database
            \`\`\`

            ### Available Tags
            - \`${{ github.ref_name }}\` (exact tag)
            - \`latest\` (if this is the latest release)
            - Platform support: \`linux/amd64\`, \`linux/arm64\`

            Built with ❤️ by GitHub Actions`;

            // Find the release and add a comment
            const { data: releases } = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100
            });

            const release = releases.find(r => r.tag_name === '${{ github.ref_name }}');
            
            if (release) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: release.id,
                body: comment
              });
              console.log('Comment added to release successfully');
            } else {
              console.log('Release not found');
            } 